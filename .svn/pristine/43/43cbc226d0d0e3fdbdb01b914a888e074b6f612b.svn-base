import { exec } from 'child_process';

// The Displayed Name in the bot message
const botusernamebase = "BOT";
// The displayed bot avatar url in the bot message
const botavatarurl = "https://i.imgur.com/CCrDk8R.png";
// Your local repository directory
const repositoryDir = "C:\Repositories";
// Your local svnlook.exe directory, if svnlook is in your path variables, you can just keep 'svnlook'
const svnlookDir = "svnlook";

// Revision number of the commit
const revisionNumber = process.argv[2]
//Name of the repository that was committed to
const repositoryName = process.argv[3]
// URL of webhook to which we'll send our payload
const webhookurl = process.argv[4]
// Assemble the repository's file path
const repopath = `${repositoryDir}`+`/${repositoryName}`

console.clear();
console.log(`revisionNumber : ${revisionNumber}`);
console.log(`webhookurl : ${webhookurl}`);
console.log(`repopath : ${repopath}`);
//run the `ls` command using exec
//exec(`${svnlookDir} ${repopath} author`, (err, output) => {
//    if (err) {
//        console.error("could not execute command: ", err)
//        return
//    }
//    console.log("Output: \n", output)
//})

//async function postData(url = '', data = {}) {
//    // Default options are marked with *
//    const response = await fetch(url, {
//      method: 'POST', // *GET, POST, PUT, DELETE, etc.
//      mode: 'cors', // no-cors, *cors, same-origin
//      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached
//      credentials: 'same-origin', // include, *same-origin, omit
//      headers: {
//        'Content-Type': 'application/json'
//        // 'Content-Type': 'application/x-www-form-urlencoded',
//      },
//      redirect: 'follow', // manual, *follow, error
//      referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
//      body: JSON.stringify(data) // body data type must match "Content-Type" header
//    });
//    return response.json(); // parses JSON response into native JavaScript objects
//  }
//  
//  postData('https://example.com/answer', { answer: 42 })
//    .then((data) => {
//      console.log(data); // JSON data parsed by `data.json()` call
//    });